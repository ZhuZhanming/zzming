<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="top.zzming.dao.UserMapper">
  <resultMap id="BaseResultMap" type="top.zzming.model.User">
    <id column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="nickname" jdbcType="CHAR" property="nickname" />
    <result column="username" jdbcType="CHAR" property="username" />
    <result column="password" jdbcType="CHAR" property="password" />
    <result column="email" jdbcType="CHAR" property="email" />
    <result column="phone" jdbcType="CHAR" property="phone" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="last_login_time" jdbcType="TIMESTAMP" property="lastLoginTime" />
    <result column="last_login_ip" jdbcType="INTEGER" property="lastLoginIp" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <collection property="roles" ofType="Role">
        <id column="role_id" jdbcType="INTEGER" property="roleId"/>
        <result column="role_name" jdbcType="CHAR" property="roleName"/>
    </collection>
  </resultMap>
  <sql id="Base_Column_List">
    u.user_id, nickname, username, password, email, phone, create_time, last_login_time,
    last_login_ip, status, r.role_id, role_name
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from users u,user_role ur,roles r
    where u.user_id = #{userId,jdbcType=INTEGER}
      and u.user_id = ur.user_id
      and r.role_id = ur.role_id
  </select>
    <select id="selectByUsername" parameterType="java.lang.String" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from users u,user_role ur,roles r
        where u.username = #{username,jdbcType=CHAR}
        and u.user_id = ur.user_id
        and r.role_id = ur.role_id
    </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from users
    where user_id = #{userId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="top.zzming.model.User">
    insert into users (user_id, nickname, username, 
      password, email, phone, create_time, 
      last_login_time, last_login_ip, status
      )
    values (#{userId,jdbcType=INTEGER}, #{nickname,jdbcType=CHAR}, #{username,jdbcType=CHAR}, 
      #{password,jdbcType=CHAR}, #{email,jdbcType=CHAR}, #{phone,jdbcType=CHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{lastLoginTime,jdbcType=TIMESTAMP}, #{lastLoginIp,jdbcType=INTEGER}, #{status,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="top.zzming.model.User">
      <selectKey keyProperty="userId" resultType="int">
          select LAST_INSERT_ID()
      </selectKey>
    insert into users
    <trim prefix="(" suffix=")" suffixOverrides=",">
        nickname,
        username,
        password,
        email,
      <if test="phone != null">
        phone,
      </if>
        create_time,
        status,
        active_code
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
        #{nickname,jdbcType=CHAR},
        #{username,jdbcType=CHAR},
        #{password,jdbcType=CHAR},
        #{email,jdbcType=CHAR},
      <if test="phone != null">
        #{phone,jdbcType=CHAR},
      </if>
        now(),
        0,
        #{activeCode,jdbcType=CHAR}
    </trim>
  </insert>
  <insert id="insertUserRole">
    insert into user_role
    VALUES (#{userId,jdbcType=INTEGER},#{roleId,jdbcType=INTEGER})
  </insert>
  <update id="activeUser">
    UPDATE users
    SET status=1,active_code=NULL
    WHERE active_code=#{activeCode,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="top.zzming.model.User">
    update users
    <set>
      <if test="nickname != null">
        nickname = #{nickname,jdbcType=CHAR},
      </if>
      <if test="username != null">
        username = #{username,jdbcType=CHAR},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=CHAR},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=CHAR},
      </if>
      <if test="phone != null">
        phone = #{phone,jdbcType=CHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="lastLoginTime != null">
        last_login_time = #{lastLoginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="lastLoginIp != null">
        last_login_ip = #{lastLoginIp,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
    </set>
    where user_id = #{userId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="top.zzming.model.User">
    update users
    set nickname = #{nickname,jdbcType=CHAR},
      username = #{username,jdbcType=CHAR},
      password = #{password,jdbcType=CHAR},
      email = #{email,jdbcType=CHAR},
      phone = #{phone,jdbcType=CHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      last_login_time = #{lastLoginTime,jdbcType=TIMESTAMP},
      last_login_ip = #{lastLoginIp,jdbcType=INTEGER},
      status = #{status,jdbcType=INTEGER}
    where user_id = #{userId,jdbcType=INTEGER}
  </update>
</mapper>